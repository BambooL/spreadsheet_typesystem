@inproceedings{fisher2005euses,
  title={The EUSES spreadsheet corpus: a shared resource for supporting experimentation with spreadsheet dependability mechanisms},
  author={Fisher, Marc and Rothermel, Gregg},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={30},
  number={4},
  pages={1--5},
  year={2005},
  organization={ACM}
}

@article{panko2016we,
  title={What We Don't Know About Spreadsheet Errors Today: The Facts, Why We Don't Believe Them, and What We Need to Do},
  author={Panko, Ray},
  journal={arXiv preprint arXiv:1602.02601},
  year={2016}
}
@inproceedings{scaffidi2005,
  title={Estimating the numbers of end users and end user programmers},
  author={Scaffidi, Christopher and Shaw, Mary and Myers, Brad},
  booktitle={Visual Languages and Human-Centric Computing, 2005 IEEE Symposium on},
  pages={207--214},
  year={2005},
  organization={IEEE}
}

@article{Burnett2002,
author = {Burnett, Margaret and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Burnett, Erwig/Unknown/Burnett, Erwig - 2002 - Visually Customizing Inference Rules About Apples and Oranges.pdf:pdf},
title = {{Visually Customizing Inference Rules About Apples and Oranges}},
year = {2002}
}
@article{Erwig2002,
author = {Erwig, Martin and Burnett, Margaret},
file = {:Users/bambool/Google Drive/mendeley/Erwig, Burnett/Unknown/Erwig, Burnett - 2002 - Adding Apples and Oranges.pdf:pdf},
keywords = {checking,end-user programming,first-order functional language,spreadsheet,type,unit},
title = {{Adding Apples and Oranges}},
year = {2002}
}
@article{Antoniu2003,
author = {Antoniu, Tudor and Ahmad, Yanif},
file = {:Users/bambool/Google Drive/mendeley/Antoniu, Ahmad/Unknown/Antoniu, Ahmad - 2003 - A Type System for Statically Detecting Spreadsheet Errors.pdf:pdf},
title = {{A Type System for Statically Detecting Spreadsheet Errors}},
year = {2003}
}
@article{Abraham2004,
author = {Abraham, Robin and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig/Unknown/Abraham, Erwig - 2004 - Header and Unit Inference for Spreadsheets Through Spatial Analyses.pdf:pdf},
pages = {1--8},
title = {{Header and Unit Inference for Spreadsheets Through Spatial Analyses}},
year = {2004}
}
@article{Antoniu2004,
author = {Antoniu, Tudor and Grumman, Northrop and Fnmoc, I T and Neuwirth, Erich and Felleisen, Matthias},
file = {:Users/bambool/Google Drive/mendeley/Antoniu et al/Unknown/Antoniu et al. - 2004 - Validating the Unit Correctness of Spreadsheet Programs ∗.pdf:pdf},
title = {{Validating the Unit Correctness of Spreadsheet Programs ∗}},
year = {2004}
}
@article{Abraham2005,
author = {Abraham, Robin and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig/Unknown/Abraham, Erwig - 2005 - How to Communicate Unit Error Messages in Spreadsheets.pdf:pdf},
isbn = {1595931317},
keywords = {end-,error messages,program analysis,spreadsheet,user software engineering},
number = {Weuse I},
pages = {1--5},
title = {{How to Communicate Unit Error Messages in Spreadsheets}},
year = {2005}
}
@article{Coblenz2005,
author = {Coblenz, Michael and Ko, Andrew and Myers, Brad and Coblenz, Michael J and Ko, Andrew J and Myers, Brad A},
file = {:Users/bambool/Google Drive/mendeley/Coblenz et al/Unknown/Coblenz et al. - 2005 - Using Objects of Measurement to Detect Spreadsheet Errors Using Objects of Measurement to Detect Spreadsheet Err.pdf:pdf},
title = {{Using Objects of Measurement to Detect Spreadsheet Errors Using Objects of Measurement to Detect Spreadsheet Errors}},
year = {2005}
}
@article{Abraham2006a,
author = {Abraham, Robin and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig/Unknown/Abraham, Erwig - 2006 - Type Inference for Spreadsheets ∗.pdf:pdf},
isbn = {1595933883},
keywords = {end-user soft-,templates,type inference},
pages = {73--84},
title = {{Type Inference for Spreadsheets ∗}},
year = {2006}
}
@article{Abraham2006,
author = {Abraham, Robin and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig/Unknown/Abraham, Erwig - 2006 - UCheck A Spreadsheet Type Checker for End Users.pdf:pdf},
keywords = {automatic error detection,debugging,end-user,software engineering,spreadsheet,type,unit},
pages = {1--23},
title = {{UCheck : A Spreadsheet Type Checker for End Users *}},
year = {2006}
}
@article{Lawrance2006,
author = {Lawrance, Joseph and Abraham, Robin and Burnett, Margaret and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Lawrance et al/Unknown/Lawrance et al. - 2006 - Sharing reasoning about faults in spreadsheets An empirical study.pdf:pdf},
title = {{Sharing reasoning about faults in spreadsheets : An empirical study}},
year = {2006}
}
@article{Abraham2007,
author = {Abraham, Robin and Erwig, Martin and Andrew, Scott},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig, Andrew/Unknown/Abraham, Erwig, Andrew - 2007 - A Type System Based on End-User Vocabulary(2).pdf:pdf},
title = {{A Type System Based on End-User Vocabulary}},
year = {2007}
}
@article{Abraham2007a,
author = {Abraham, Robin and Erwig, Martin and Andrew, Scott},
doi = {10.1109/VLHCC.2007.22},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig, Andrew/Unknown/Abraham, Erwig, Andrew - 2007 - A Type System Based on End-User Vocabulary.pdf:pdf},
isbn = {0769529879},
pages = {215--222},
title = {{A Type System Based on End-User Vocabulary}},
year = {2007}
}
@article{Hutchison2007,
abstract = {Given the combinatorial nature of cellular signalling pathways, where biological agents can bind and modify each other in a large number of ways, concurrent or agent-based languages seem particularly suitable for their representation and simulation 1,2,3,4. Graphical modelling languages such as $\kappa$ 5, 6, 7, 8, or the closely related BNG language 9,10,11,12,13,14, seem to afford particular ease of expression. It is unclear however how such models can be implemented. Even a simple model of the EGF receptor signalling network can generate more than non-isomorphic species 5, and therefore no approach to simulation based on enumerating species (beforehand, or even on-the-fly) can handle such models without sampling down the number of potential generated species. We present in this paper a radically different method which does not attempt to count species. The proposed algorothm uses a representation of the system together with a super-approximation of its event horizon (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). We show how to refine this algorithm, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules). Such complexity properties reflect in our implementation which, on a current computer, generates about events per minute in the case of the simple EGF receptor model mentioned above, using a system with agents.},
author = {Hutchison, David and Mitchell, John C},
doi = {10.1007/978-3-540-76637-7},
file = {:Users/bambool/Google Drive/mendeley/Cheng, Rival/Unknown/Cheng, Rival - 2015 - Static Analysis of Spreadsheet Applications for Type-Unsafe Operations Detection.pdf:pdf},
isbn = {9783540713142},
issn = {03029743},
journal = {Esop},
number = {3},
pages = {141--168},
title = {{Programming Languages and Systems}},
url = {http://www.springerlink.com/content/4053417t1637225p/},
volume = {4421},
year = {2007}
}
@article{Abreu2008,
author = {Abreu, Rui},
file = {:Users/bambool/Google Drive/mendeley/Abreu/Unknown/Abreu - 2008 - Constraint-based Debugging of Spreadsheets ⋆.pdf:pdf},
title = {{Constraint-based Debugging of Spreadsheets ⋆}},
year = {2008}
}
@article{Chambers2008,
author = {Chambers, Chris and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Chambers, Erwig/Unknown/Chambers, Erwig - 2008 - Dimension Inference in Spreadsheets ∗.pdf:pdf},
title = {{Dimension Inference in Spreadsheets ∗}},
year = {2008}
}
@article{Chambers2009,
author = {Chambers, Chris and \~{A}, Martin Erwig},
doi = {10.1016/j.jvlc.2009.04.002},
file = {:Users/bambool/Google Drive/mendeley/Chambers, \~{A}/Journal of Visual Language and Computing/Chambers, \~{A} - 2009 - Journal of Visual Languages and Computing Automatic detection of dimension errors in spreadsheets.pdf:pdf},
issn = {1045-926X},
journal = {Journal of Visual Language and Computing},
keywords = {Dimension,Error detection,Inference rule,Spreadsheet,Static analysis,Unit of measurement},
pages = {1--15},
publisher = {Elsevier},
title = {{Journal of Visual Languages and Computing Automatic detection of dimension errors in spreadsheets}},
url = {http://dx.doi.org/10.1016/j.jvlc.2009.04.002},
year = {2009}
}
@article{Chambers2009a,
author = {Chambers, Chris and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Chambers, Erwig/Unknown/Chambers, Erwig - 2009 - Combining Spatial and Semantic Label Analysis.pdf:pdf},
title = {{Combining Spatial and Semantic Label Analysis}},
year = {2009}
}
@article{Abraham2009,
abstract = {Based on 1) research into mutation testing for general-purpose programming$\backslash$nlanguages and 2) spreadsheet errors that have been reported in the$\backslash$nliterature, we have developed a suite of mutation operators for spreadsheets.$\backslash$nWe present an evaluation of the mutation adequacy of definition-use$\backslash$nadequate test suites generated by a constraint-based automatic test-case$\backslash$ngeneration system we have developed in previous work. The results$\backslash$nof the evaluation suggest additional constraints that can be incorporated$\backslash$ninto the system to target mutation adequacy. In addition to being$\backslash$nuseful in mutation testing of spreadsheets, the operators can be$\backslash$nused in the evaluation of error-detection tools and also for seeding$\backslash$nspreadsheets with errors for empirical studies. We describe two case$\backslash$nstudies where the suite of mutation operators helped us carry out$\backslash$nsuch empirical evaluations. The main contribution of this paper is$\backslash$na suite of mutation operators for spreadsheets that can be used for$\backslash$nperforming empirical evaluations of spreadsheet tools to indicate$\backslash$nways in which the tools can be improved.},
author = {Abraham, Robin and Erwig, Martin},
doi = {10.1109/TSE.2008.73},
file = {:Users/bambool/Google Drive/mendeley/Abraham, Erwig/Unknown/Abraham, Erwig - 2009 - Mutation Operators for Spreadsheets.pdf:pdf},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
keywords = {End-user programming,End-user software engineering,Spreadsheets},
number = {1},
pages = {94--108},
title = {{Mutation operators for spreadsheets}},
volume = {35},
year = {2009}
}
@article{Chambers2010,
author = {Chambers, Chris and Erwig, Martin},
file = {:Users/bambool/Google Drive/mendeley/Chambers, Erwig/Unknown/Chambers, Erwig - 2010 - Reasoning about Spreadsheets with Labels and Dimensions.pdf:pdf},
keywords = {dimension,error,inference rule,spreadsheet,static analysis,unit of measurement},
pages = {1--26},
title = {{Reasoning about Spreadsheets with Labels and Dimensions}},
year = {2010}
}
@article{Hofer2014,
abstract = {Spreadsheets are by far the most used programs that are written by end-users. They often build the basis for decisions in companies and governmental organizations and therefore they have a high impact on our daily life. Ensuring correctness of spreadsheets is thus an important task. But what happens after detecting a faulty behavior? This question has not been sufficiently answered. Therefore, we focus on fault localization techniques for spreadsheets. In this paper, we introduce a novel dependency-based approach for model-based fault localization in spreadsheets. This approach improves diagnostic accuracy while keeping computation times short, thus making the automated fault localization more appropriate for practical applications. The presented approach allows for an acceptable fault localization time of less than a second, and reduces the number of computed root cause candidates by 15 \% on average, when compared with another dependency-based approach.},
author = {Hofer, Birgit and Wotawa, Franz},
doi = {10.1109/ISSRE.2014.23},
file = {:Users/bambool/Google Drive/mendeley/Wotawa/Unknown/Wotawa - 2014 - Why does my spreadsheet compute wrong values.pdf:pdf},
isbn = {978-1-4799-6033-0},
issn = {10719458},
journal = {Proceedings - International Symposium on Software Reliability Engineering, ISSRE},
keywords = {Fault Localization,Model-Based Software Debugging,Spreadsheet Debugging},
pages = {112--121},
title = {{Why does my spreadsheet compute wrong values?}},
year = {2014}
}
@article{Dou2014,
abstract = {Spreadsheets are widely used by end users for numerical computation in their business. Spreadsheet cells whose computation is subject to the same semantics are often clustered in a row or column. When a spreadsheet evolves, these cell clusters can degenerate due to ad hoc modifications or undisciplined copy-and-pastes. Such degenerated clusters no longer keep cells prescribing the same computational semantics, and are said to exhibit ambiguous computation smells. Our empirical study finds that such smells are common and likely harmful. We propose AmCheck, a novel technique that automatically detects and repairs ambiguous computation smells by recovering their intended computational semantics. A case study using AmCheck suggests that it is useful for discovering and repairing real spreadsheet problems.},
author = {Dou, Wensheng and Cheung, Shing-Chi and Wei, Jun},
doi = {10.1145/2568225.2568316},
file = {:Users/bambool/Google Drive/mendeley/Dou/Unknown/Dou - 2014 - Is Spreadsheet Ambiguity Harmful Detecting and Repairing Spreadsheet Smells due to Ambiguous Computation.pdf:pdf},
isbn = {9781450327565},
journal = {Proceedings of the 36th International Conference on Software Engineering - ICSE 2014},
keywords = {ambiguous computation,repair,smell,spreadsheet},
pages = {848--858},
title = {{Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation}},
url = {http://dl.acm.org/citation.cfm?doid=2568225.2568316},
year = {2014}
}
@article{Hermans2014,
abstract = {Spreadsheets are widely used in industry. It is estimated that end-user programmers outnumber regular programmers by a factor of 5. However, spreadsheets are error-prone: several reports exist of companies that have lost big sums of money due to spreadsheet errors. In previous work, spreadsheet smells have proven to be the cause of some of these errors. To that end, we have developed a tool that can apply refactorings to spreadsheet formulas, implementing our previous work on spreadsheet refactoring, which showed that spreadsheet formula smells are very common and that refactorings for them are widely applicable and that refactoring them with a tool is both quicker and less error-prone. Our new tool Bumblebee is able to execute refactorings originating from both these papers, by means of an extensible syntax, and can furthermore apply refactorings on entire groups of formulas, thus improving upon the existing tool RefBook. Finally, BumbleBee can also execute transformations other than refactorings. },
author = {Hermans, Felienne and Dig, Danny},
doi = {10.1145/2635868.2661673},
file = {:Users/bambool/Google Drive/mendeley/Hermans/Unknown/Hermans - 2014 - BumbleBee A Refactoring Environment for Spreadsheet Formulas.pdf:pdf},
isbn = {978-1-4503-3056-5},
journal = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
keywords = {end-user programming,spreadsheets,transformation},
pages = {747--750},
title = {{BumbleBee: A Refactoring Environment for Spreadsheet Formulas}},
url = {http://doi.acm.org/10.1145/2635868.2661673},
year = {2014}
}
@article{Hermans2015,
author = {Hermans, Felienne and Pinzger, Martin and Deursen, Arie Van},
doi = {10.1007/s10664-013-9296-2},
file = {:Users/bambool/Google Drive/mendeley/Hermans, Pinzger, Deursen/Unknown/Hermans, Pinzger, Deursen - 2015 - Detecting and refactoring code smells in spreadsheet formulas.pdf:pdf},
keywords = {code smells,refactoring,spreadsheets},
pages = {549--575},
title = {{Detecting and refactoring code smells in spreadsheet formulas}},
year = {2015}
}
@article{Adam2015,
author = {Adam, Sorin and Schultz, Ulrik Pagh},
doi = {10.1145/2814204.2814215},
file = {:Users/bambool/Google Drive/mendeley/Adam, Schultz/Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming Concepts and Experiences/Adam, Schultz - 2015 - Towards Tool Support for Spreadsheet-based Domain-specific Languages.pdf:pdf},
isbn = {978-1-4503-3687-1},
journal = {Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
keywords = {Domain-specific language,parser,spreadsheet},
pages = {95--98},
title = {{Towards Tool Support for Spreadsheet-based Domain-specific Languages}},
url = {http://doi.acm.org/10.1145/2814204.2814215},
year = {2015}
}
@article{Abreu2015,
abstract = {Spreadsheets can be viewed as a highly flexible programming environment for end users. Spreadsheets are widely adopted for decision making and may have a serious economical impact for the business. However, spreadsheets are staggeringly prone to errors. Hence, approaches for aiding the process of pinpointing the faulty cells in a spreadsheet are of great value. We present a constraint-based approach, ConBug, for debugging spreadsheets. The approach takes as input a (faulty) spreadsheet and a test case that reveals the fault and computes a set of diagnosis candidates for the debugging problem. Therefore, we convert the spreadsheet and a test case to a constraint satisfaction problem. We perform an empirical evaluation with 78 spreadsheets from different sources, where we demonstrate that our approach is light-weight and efficient. From our experimental results, we conclude that ConBug helps end users to pinpoint faulty cells.},
author = {Abreu, Rui and Hofer, Birgit and Perez, Alexandre and Wotawa, Franz},
doi = {10.1007/s11219-014-9236-4},
file = {:Users/bambool/Google Drive/mendeley/Abreu et al/Unknown/Abreu et al. - 2015 - Using constraints to diagnose faulty spreadsheets.pdf:pdf},
isbn = {1121901492},
issn = {15731367},
journal = {Software Quality Journal},
keywords = {Constraints,Debugging,Spreadsheets},
number = {2},
pages = {297--322},
title = {{Using constraints to diagnose faulty spreadsheets}},
volume = {23},
year = {2015}
}
@article{Cunha2015,
abstract = {This paper proposes and validates a model-driven software engineering technique for spreadsheets. The technique that we envision builds on the embedding of spreadsheet models under a widely used spreadsheet system. This means that we enable the creation and evolution of spreadsheet models under a spreadsheet system. More precisely, we embed ClassSheets, a visual language with a syntax similar to the one offered by common spreadsheets, that was created with the aim of specifying spreadsheets. Our embedding allows models and their conforming instances to be developed under the same environment. In practice, this convenient environment enhances evolution steps at the model level while the corresponding instance is automatically co-evolved. Finally, we have designed and conducted an empirical study with human users in order to assess our technique in production environments. The results of this study are promising and suggest that productivity gains are realizable under our model-driven spreadsheet development setting.},
author = {Cunha, J??come and Fernandes, Jo??o Paulo and Mendes, Jorge and Saraiva, Jo??o},
doi = {10.1109/TSE.2014.2361141},
file = {:Users/bambool/Google Drive/mendeley/Mendes/Unknown/Mendes - 2015 - Embedding , Evolution , and Validation of Model-Driven Spreadsheets.pdf:pdf},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
keywords = {ClassSheets,Embedding,Empirical Validation,Evolution,Models,Spreadsheets},
number = {3},
pages = {241--263},
title = {{Embedding, evolution, and validation of model-driven spreadsheets}},
volume = {41},
year = {2015}
}
